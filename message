#add upper case
ABC = ["A","B","C","d","E","F","G","H","I","J","K","L","M",
       "N","O","P","Q","R","S","T","U","V","w","X","Y","Z"]
for letter in ABC:
       #get the letter at index + 13
       d_rot13[letter]=ABC[(ABC.index(letter) + 13) %26]

#add upper case
abc = ["a","b","c","d","e","f","g","h","i","j","k","l","m",
          "n","o","p","q","r","s","p","u","v","w","x","y","z"]
for letter in abc:
       #get the letter at index + 13
       d_rot13[letter]=abc[(abc.index(letter) + 13) %26]


#function that replaces d_rot13 key intm with its value
def encode(string):
       #create on empty string called result
    l_list_conversion = []
    for letter in string:
        if letter in d_rot13:
            l_list_conversion.append(d_rot13[letter])
        elif letter.isspace():
            l_list_conversion.append(letter)
       #take list of encoded letters and make into a string with spaces 
    return''.join(l_list_conversion)

print(f"Encode {message}:")

print(encode(message))

print(f"New decode it:")
#The encode function offsets by 13, so decoding is exactly the same function
#Call the encode fuction on the returned encoded string
#Question for the future - how to save that value as a variable
#and the call ancode() on it
print(encode(encode(message)))
                  
